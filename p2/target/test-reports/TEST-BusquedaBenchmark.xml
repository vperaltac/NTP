<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="omenhp" name="BusquedaBenchmark" tests="1" errors="1" failures="0" skipped="0" time="-0.001" timestamp="2020-05-15T13:32:31">
                     <properties>
      <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/><property name="java.specification.version" value="11"/><property name="sun.cpu.isalist" value=""/><property name="sun.jnu.encoding" value="UTF-8"/><property name="sun.arch.data.model" value="64"/><property name="sbt.supershell" value="false"/><property name="java.vendor.url" value="https://www.jetbrains.com/"/><property name="sun.boot.library.path" value="/home/vperalta/idea-IU-193.6494.35/jbr/lib"/><property name="sun.java.command" value="/home/vperalta/.local/share/JetBrains/IntelliJIdea2020.1/Scala/launcher/sbt-launch.jar early(addPluginSbtFile=&quot;&quot;&quot;/tmp/idea.sbt&quot;&quot;&quot;) ; set ideaPort in Global := 37881 ; idea-shell"/><property name="jdk.debug" value="release"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="java.version.date" value="2020-01-14"/><property name="java.home" value="/home/vperalta/idea-IU-193.6494.35/jbr"/><property name="file.separator" value="/"/><property name="java.vm.compressedOopsMode" value="32-bit"/><property name="line.separator" value="
"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="java.runtime.version" value="11.0.6+8-b765.25"/><property name="user.name" value="vperalta"/><property name="log4j.ignoreTCL" value="true"/><property name="file.encoding" value="UTF-8"/><property name="java.io.tmpdir" value="/tmp"/><property name="java.version" value="11.0.6"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/><property name="sun.os.patch.level" value="unknown"/><property name="java.library.path" value="/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib"/><property name="java.vendor" value="JetBrains s.r.o"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="sun.desktop" value="gnome"/><property name="java.class.path" value="/home/vperalta/.local/share/JetBrains/IntelliJIdea2020.1/Scala/launcher/sbt-launch.jar"/><property name="java.vm.vendor" value="JetBrains s.r.o"/><property name="jline.shutdownhook" value="false"/><property name="user.timezone" value="Europe/Madrid"/><property name="os.name" value="Linux"/><property name="java.vm.specification.version" value="11"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="user.country" value="US"/><property name="sun.cpu.endian" value="little"/><property name="user.home" value="/home/vperalta"/><property name="user.language" value="en"/><property name="swoval.tmpdir" value="/home/vperalta/.sbt/1.0"/><property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/><property name="jline.esc.timeout" value="0"/><property name="path.separator" value=":"/><property name="os.version" value="5.3.0-51-generic"/><property name="jna.nosys" value="true"/><property name="java.runtime.name" value="OpenJDK Runtime Environment"/><property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/><property name="java.vendor.url.bug" value="https://youtrack.jetbrains.com"/><property name="user.dir" value="/home/vperalta/Dropbox/Ingenieria Informatica/NTP/Practicas/p2"/><property name="os.arch" value="amd64"/><property name="idea.managed" value="true"/><property name="java.vm.info" value="mixed mode"/><property name="java.vm.version" value="11.0.6+8-b765.25"/><property name="java.class.version" value="55.0"/>
    </properties>
                     <testcase classname="BusquedaBenchmark" name="" time="-0.001">
                                                 <error message="/ by zero" type="java.lang.ArithmeticException">java.lang.ArithmeticException: / by zero
	at org.jline.utils.Display.update(Display.java:302)
	at org.scalameter.Log$JLine.clear(Log.scala:244)
	at org.scalameter.Log$Proxy.clear(Log.scala:120)
	at org.scalameter.Executor.$anonfun$run$2(Executor.scala:34)
	at org.scalameter.utils.Tree.$anonfun$map$1(Tree.scala:17)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:237)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at scala.collection.TraversableLike.map(TraversableLike.scala:237)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:230)
	at scala.collection.immutable.List.map(List.scala:298)
	at org.scalameter.utils.Tree.map(Tree.scala:17)
	at org.scalameter.utils.Tree.$anonfun$map$2(Tree.scala:18)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:237)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at scala.collection.TraversableLike.map(TraversableLike.scala:237)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:230)
	at scala.collection.immutable.List.map(List.scala:298)
	at org.scalameter.utils.Tree.map(Tree.scala:18)
	at org.scalameter.utils.Tree.$anonfun$map$2(Tree.scala:18)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:237)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at scala.collection.TraversableLike.map(TraversableLike.scala:237)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:230)
	at scala.collection.immutable.List.map(List.scala:298)
	at org.scalameter.utils.Tree.map(Tree.scala:18)
	at org.scalameter.Executor.$anonfun$run$1(Executor.scala:33)
	at org.scalameter.Executor.$anonfun$run$1$adapted(Executor.scala:32)
	at org.scalameter.MonadicDynVar$$anon$1.$anonfun$foreach$1(MonadicDynVar.scala:7)
	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:62)
	at org.scalameter.MonadicDynVar$$anon$1.foreach(MonadicDynVar.scala:7)
	at org.scalameter.Executor.run(Executor.scala:32)
	at org.scalameter.Executor.run$(Executor.scala:22)
	at org.scalameter.execution.SeparateJvmsExecutor.super$run(SeparateJvmsExecutor.scala:49)
	at org.scalameter.execution.SeparateJvmsExecutor.$anonfun$run$2(SeparateJvmsExecutor.scala:49)
	at org.scalameter.execution.SeparateJvmsExecutor.$anonfun$run$2$adapted(SeparateJvmsExecutor.scala:48)
	at org.scalameter.MonadicDynVar$$anon$1.$anonfun$foreach$1(MonadicDynVar.scala:7)
	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:62)
	at org.scalameter.MonadicDynVar$$anon$1.foreach(MonadicDynVar.scala:7)
	at org.scalameter.execution.SeparateJvmsExecutor.run(SeparateJvmsExecutor.scala:48)
	at org.scalameter.BasePerformanceTest.$anonfun$executeTests$2(performance-test.scala:93)
	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:62)
	at org.scalameter.BasePerformanceTest.executeTests(performance-test.scala:90)
	at org.scalameter.ScalaMeterFramework$$anon$1.$anonfun$run$2(ScalaMeterFramework.scala:87)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at org.scalameter.package$.$anonfun$withTestContext$3(package.scala:53)
	at org.scalameter.package$.$anonfun$withTestContext$3$adapted(package.scala:52)
	at org.scalameter.MonadicDynVar$$anon$1.$anonfun$foreach$1(MonadicDynVar.scala:7)
	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:62)
	at org.scalameter.MonadicDynVar$$anon$1.foreach(MonadicDynVar.scala:7)
	at org.scalameter.package$.$anonfun$withTestContext$2(package.scala:52)
	at org.scalameter.package$.$anonfun$withTestContext$2$adapted(package.scala:51)
	at org.scalameter.MonadicDynVar$$anon$1.$anonfun$foreach$1(MonadicDynVar.scala:7)
	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:62)
	at org.scalameter.MonadicDynVar$$anon$1.foreach(MonadicDynVar.scala:7)
	at org.scalameter.package$.$anonfun$withTestContext$1(package.scala:51)
	at org.scalameter.package$.$anonfun$withTestContext$1$adapted(package.scala:50)
	at org.scalameter.MonadicDynVar$$anon$1.$anonfun$foreach$1(MonadicDynVar.scala:7)
	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:62)
	at org.scalameter.MonadicDynVar$$anon$1.foreach(MonadicDynVar.scala:7)
	at org.scalameter.package$.withTestContext(package.scala:50)
	at org.scalameter.ScalaMeterFramework$$anon$1.run(ScalaMeterFramework.scala:78)
	at sbt.RunnerWrapper$1.runRunner2(FrameworkWrapper.java:230)
	at sbt.RunnerWrapper$1.execute(FrameworkWrapper.java:243)
	at sbt.TestRunner.runTest$1(TestFramework.scala:139)
	at sbt.TestRunner.run(TestFramework.scala:154)
	at sbt.TestFramework$$anon$3$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:317)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:277)
	at sbt.TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:317)
	at sbt.TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:317)
	at sbt.TestFunction.apply(TestFramework.scala:329)
	at sbt.Tests$.processRunnable$1(Tests.scala:350)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:356)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(Transform.scala:46)
	at sbt.std.Transform$$anon$4.work(Transform.scala:67)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:281)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:19)
	at sbt.Execute.work(Execute.scala:290)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:281)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:37)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
</error>
                                               </testcase>
                     <system-out><![CDATA[]]></system-out>
                     <system-err><![CDATA[]]></system-err>
                   </testsuite>